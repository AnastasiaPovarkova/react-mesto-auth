{"ast":null,"code":"export var BASE_URL=\"https://auth.nomoreparties.co\";export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(response){return response.json();}).then(function(res){return res;});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(response){return response.json();}).then(function(data){if(data.token){localStorage.setItem(\"jwt\",data.token);return data;}});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","concat","method","headers","body","JSON","stringify","then","response","json","res","authorize","data","token","localStorage","setItem","checkToken","Authorization"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((res) => {\n      return res;\n    });\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        return data;\n      }\n    });\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n};\n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,+BAA+B,CAEvD,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,YAAW,CACjCM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAED,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CACCS,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,MAAO,CAAAA,QAAQ,CAACC,IAAI,EAAE,CACxB,CAAC,CAAC,CACDF,IAAI,CAAC,SAACG,GAAG,CAAK,CACb,MAAO,CAAAA,GAAG,CACZ,CAAC,CAAC,CACN,CAAC,CAED,MAAO,IAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIZ,QAAQ,CAAED,KAAK,CAAK,CAC5C,MAAO,CAAAE,KAAK,IAAAC,MAAA,CAAIL,QAAQ,YAAW,CACjCM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,QAAQ,CAARA,QAAQ,CAAED,KAAK,CAALA,KAAM,CAAC,CAC1C,CAAC,CAAC,CACCS,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACnCF,IAAI,CAAC,SAACK,IAAI,CAAK,CACd,GAAIA,IAAI,CAACC,KAAK,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEH,IAAI,CAACC,KAAK,CAAC,CACvC,MAAO,CAAAD,IAAI,CACb,CACF,CAAC,CAAC,CACN,CAAC,CAED,MAAO,IAAM,CAAAI,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIH,KAAK,CAAK,CACnC,MAAO,CAAAb,KAAK,IAAAC,MAAA,CAAIL,QAAQ,cAAa,CACnCM,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClCc,aAAa,WAAAhB,MAAA,CAAYY,KAAK,CAChC,CACF,CAAC,CAAC,CACCN,IAAI,CAAC,SAACG,GAAG,QAAK,CAAAA,GAAG,CAACD,IAAI,EAAE,GAAC,CACzBF,IAAI,CAAC,SAACK,IAAI,QAAK,CAAAA,IAAI,GAAC,CACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}