{"ast":null,"code":"var _jsxFileName = \"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { UserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUser = React.useContext(UserContext);\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  function handleSubmit(e) {\n    e.preventDefault(); // Запрещаем браузеру переходить по адресу формы\n\n    onUpdateUser({\n      // Передаём значения управляемых компонентов во внешний обработчик\n      name,\n      about: description\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    classs: \"edit-profile\",\n    name: \"profile-content\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    onClose: onClose,\n    isOpen: isOpen,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name-field\",\n      className: \"popup__field popup__field_input_name\",\n      value: name || '',\n      onChange: handleNameChange,\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      name: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"name-field-error popup__field-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"profession-field\",\n      className: \"popup__field popup__field_input_profession\",\n      value: description || '',\n      onChange: handleDescriptionChange,\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      placeholder: \"\\u0412\\u0430\\u0448\\u0430 \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044F\",\n      name: \"about\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"profession-field-error popup__field-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","UserContext","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","isOpen","onClose","onUpdateUser","name","setName","useState","description","setDescription","currentUser","useContext","handleNameChange","e","target","value","handleDescriptionChange","useEffect","about","handleSubmit","preventDefault","classs","title","onSubmit","children","type","id","className","onChange","minLength","maxLength","required","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {UserContext} from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const currentUser = React.useContext(UserContext);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n  \n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();// Запрещаем браузеру переходить по адресу формы\n  \n    onUpdateUser({ // Передаём значения управляемых компонентов во внешний обработчик\n      name,\n      about: description,\n    })\n  } \n\n  return (\n    <PopupWithForm classs='edit-profile' name='profile-content' title='Редактировать профиль'\n        onClose={onClose}\n        isOpen={isOpen}\n        onSubmit={handleSubmit}>\n          <input type=\"text\" \n            id=\"name-field\" \n            className=\"popup__field popup__field_input_name\" \n            value={name || ''}\n            onChange={handleNameChange}\n            minLength=\"2\" \n            maxLength=\"40\" \n            required \n            placeholder=\"Ваше имя\" \n            name=\"name\" />\n          <span className=\"name-field-error popup__field-error\"></span>\n          <input type=\"text\" \n            id=\"profession-field\" \n            className=\"popup__field popup__field_input_profession\" \n            value={description || ''}\n            onChange={handleDescriptionChange}\n            minLength=\"2\" \n            maxLength=\"200\" \n            required \n            placeholder=\"Ваша профессия\" \n            name=\"about\"/>\n          <span className=\"profession-field-error popup__field-error\"></span>\n    </PopupWithForm>\n  )\n}\n  \nexport default EditProfilePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}