{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  });\n  //.catch((err) => console.log(err));\n};\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  });\n  //.catch(err => console.log(err))\n};\n\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","res","authorize","data","token","localStorage","setItem","checkToken"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\" \n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    return res;\n  });\n  //.catch((err) => console.log(err));\n};\n\nexport const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\" \n      },\n      body: JSON.stringify({password, email})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n      if (data.token){\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    })\n    //.catch(err => console.log(err))\n};\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${token}`\n    } \n    })\n    .then(res => res.json())\n    .then(data => data)\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,QAAQ;MAAED;IAAK,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;EACF;AACF,CAAC;;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACX,QAAQ,EAAED,KAAK,KAAK;EAC1C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,QAAQ;MAAED;IAAK,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAE,CACnCF,IAAI,CAAEK,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAC;MACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,KAAK,CAAC;MACvC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;EACF;AACJ,CAAC;;AAED,OAAO,MAAMI,UAAU,GAAIH,KAAK,IAAK;EACjC,OAAOZ,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASU,KAAM;IACtC;EACA,CAAC,CAAC,CACDN,IAAI,CAACG,GAAG,IAAIA,GAAG,CAACD,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACK,IAAI,IAAIA,IAAI,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}