{"ast":null,"code":"var _jsxFileName = \"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/ImagePopup.js\";\nimport React from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagePopup(_ref) {\n  let {\n    card,\n    onClose\n  } = _ref;\n  //if (Object.entries(card).length > 0) \n  return Object.entries(card).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_open-card ${Object.entries(card).length > 0 && 'popup_is-opened'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__element\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__image\",\n        src: card.src,\n        alt: card.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        className: \"popup__close\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__text\",\n        children: card.cardName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 42\n  }, this);\n  // else return (\n  //   <div className={`popup popup_open-card`} >\n  //     <div className=\"popup__element\">\n  //     </div>\n  //   </div>\n  // ) \n}\n_c = ImagePopup;\nexport default ImagePopup;\nvar _c;\n$RefreshReg$(_c, \"ImagePopup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImagePopup","_ref","card","onClose","Object","entries","length","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","cardName","_c","$RefreshReg$"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/ImagePopup.js"],"sourcesContent":["import React from 'react';\nimport '../index.css';\n\nfunction ImagePopup({card, onClose}) {\n  //if (Object.entries(card).length > 0) \n  return (\n    (Object.entries(card).length > 0) && <div className={`popup popup_open-card ${(Object.entries(card).length > 0) && 'popup_is-opened'}`} >\n      <div className=\"popup__element\">\n        <img className=\"popup__image\" src={card.src} alt={card.alt}/>\n        <button type=\"button\" aria-label=\"Закрыть\" className=\"popup__close\" onClick={onClose}></button>\n        <h2 className=\"popup__text\">{card.cardName}</h2>\n      </div>\n    </div>\n  ) \n  // else return (\n  //   <div className={`popup popup_open-card`} >\n  //     <div className=\"popup__element\">\n  //     </div>\n  //   </div>\n  // ) \n}\n  \nexport default ImagePopup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACjC;EACA,OACGG,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,MAAM,GAAG,CAAC,iBAAKP,OAAA;IAAKQ,SAAS,EAAG,yBAAyBH,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,MAAM,GAAG,CAAC,IAAK,iBAAkB,EAAE;IAAAE,QAAA,eACrIT,OAAA;MAAKQ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BT,OAAA;QAAKQ,SAAS,EAAC,cAAc;QAACE,GAAG,EAAEP,IAAI,CAACO,GAAI;QAACC,GAAG,EAAER,IAAI,CAACQ;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC7Df,OAAA;QAAQgB,IAAI,EAAC,QAAQ;QAAC,cAAW,4CAAS;QAACR,SAAS,EAAC,cAAc;QAACS,OAAO,EAAEb;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,eAC/Ff,OAAA;QAAIQ,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEN,IAAI,CAACe;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;EAER;EACA;EACA;EACA;EACA;EACA;AACF;AAACI,EAAA,GAjBQlB,UAAU;AAmBnB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}