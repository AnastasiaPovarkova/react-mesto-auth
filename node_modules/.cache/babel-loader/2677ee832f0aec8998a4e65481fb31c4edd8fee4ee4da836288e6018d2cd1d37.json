{"ast":null,"code":"import{useContext}from'react';import coursor from'../images/AvatarEditCoursor.svg';import'../index.css';import Card from'./Card';import{UserContext}from'../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(_ref){var cards=_ref.cards,onEditAvatar=_ref.onEditAvatar,onEditProfile=_ref.onEditProfile,onAddPlace=_ref.onAddPlace,handleCardClick=_ref.handleCardClick,handleDeleteClick=_ref.handleDeleteClick,handleCardLike=_ref.handleCardLike;var currentUser=useContext(UserContext);return/*#__PURE__*/_jsxs(\"main\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"profile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__image\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"profile__avatar\",src:currentUser===null||currentUser===void 0?void 0:currentUser.avatar,alt:\"\\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",onClick:onEditAvatar}),/*#__PURE__*/_jsx(\"img\",{className:\"profile__edit\",src:coursor,alt:\"\\u043A\\u043D\\u043E\\u043F\\u043A\\u0430 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile__info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__title\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"profile__name\",children:currentUser===null||currentUser===void 0?void 0:currentUser.name}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"aria-label\":\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",className:\"profile__edit-button\",onClick:onEditProfile})]}),/*#__PURE__*/_jsx(\"p\",{className:\"profile__profession\",children:currentUser===null||currentUser===void 0?void 0:currentUser.about})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",\"aria-label\":\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\",className:\"profile__add-button\",onClick:onAddPlace})]}),/*#__PURE__*/_jsx(\"section\",{className:\"elements\",children:cards===null||cards===void 0?void 0:cards.map(function(card){return/*#__PURE__*/_jsx(Card,{card:card,onCardClick:handleCardClick(),onDeleteClick:handleDeleteClick(),onCardLike:handleCardLike()},card._id);})})]});}export default Main;// const [userName, setUserName] = useState('');\n// const [userDescription, setUserDescription] = useState('');\n// const [userAvatar, setUserAvatar] = useState('');\n// const [cards, setCards] = useState([]);\n// useEffect(() => {\n//   Promise.all([api.getUserInfo(), api.getInitialCards()])\n//     .then(([data, cards]) => {\n//       setUserName(data.name);\n//       setUserDescription(data.about);\n//       setUserAvatar(data.avatar);\n//       setCards(cards.map((card) => ({\n//         id: card._id,\n//         src: card.link,\n//         cardName: card.name,\n//         alt: card.name,\n//         likes: card.likes\n//       })))\n//     })\n//     .catch(err => console.log(err));\n// }, []);","map":{"version":3,"names":["useContext","coursor","Card","UserContext","jsx","_jsx","jsxs","_jsxs","Main","_ref","cards","onEditAvatar","onEditProfile","onAddPlace","handleCardClick","handleDeleteClick","handleCardLike","currentUser","className","children","src","avatar","alt","onClick","name","type","about","map","card","onCardClick","onDeleteClick","onCardLike","_id"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Main.js"],"sourcesContent":["import { useContext } from 'react';\nimport coursor from '../images/AvatarEditCoursor.svg';\nimport '../index.css';\nimport Card from './Card';\nimport {UserContext} from '../contexts/CurrentUserContext';\n\nfunction Main({cards, onEditAvatar, onEditProfile, onAddPlace, handleCardClick, handleDeleteClick, handleCardLike}) {\n\n  const currentUser = useContext(UserContext);\n\n  return (\n    <main className=\"content\">\n  \n      <section className=\"profile\">\n        <div className=\"profile__image\">\n          <img \n            className=\"profile__avatar\" \n            src={currentUser?.avatar} \n            alt=\"аватар\"\n            onClick={onEditAvatar}/> \n          <img className=\"profile__edit\" src={coursor} alt=\"кнопка редактирования\"/>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser?.name}</h1>\n            <button \n              type=\"button\" \n              aria-label=\"Редактировать\" \n              className=\"profile__edit-button\"\n              onClick={onEditProfile}>\n            </button>\n          </div>\n          <p className=\"profile__profession\">{currentUser?.about}</p>\n        </div>\n        <button \n          type=\"button\" \n          aria-label=\"Добавить фотокарточку\" \n          className=\"profile__add-button\"\n          onClick={onAddPlace}>\n        </button>\n      </section> \n  \n      <section className=\"elements\">\n        {\n          cards?.map((card) => {\n            return <Card key={card._id}  \n                      card={card} \n                      onCardClick={handleCardClick()} \n                      onDeleteClick={handleDeleteClick()} \n                      onCardLike={handleCardLike()}/>\n          })\n        }\n      </section> \n  \n    </main> \n  );\n}\n\nexport default Main;\n\n\n// const [userName, setUserName] = useState('');\n  // const [userDescription, setUserDescription] = useState('');\n  // const [userAvatar, setUserAvatar] = useState('');\n  // const [cards, setCards] = useState([]);\n\n  // useEffect(() => {\n  //   Promise.all([api.getUserInfo(), api.getInitialCards()])\n  //     .then(([data, cards]) => {\n  //       setUserName(data.name);\n  //       setUserDescription(data.about);\n  //       setUserAvatar(data.avatar);\n  //       setCards(cards.map((card) => ({\n  //         id: card._id,\n  //         src: card.link,\n  //         cardName: card.name,\n  //         alt: card.name,\n  //         likes: card.likes\n  //       })))\n  //     })\n  //     .catch(err => console.log(err));\n  // }, []);"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,MAAO,CAAAC,OAAO,KAAM,iCAAiC,CACrD,MAAO,cAAc,CACrB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAAQC,WAAW,KAAO,gCAAgC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3D,QAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAuG,IAArG,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,YAAY,CAAAF,IAAA,CAAZE,YAAY,CAAEC,aAAa,CAAAH,IAAA,CAAbG,aAAa,CAAEC,UAAU,CAAAJ,IAAA,CAAVI,UAAU,CAAEC,eAAe,CAAAL,IAAA,CAAfK,eAAe,CAAEC,iBAAiB,CAAAN,IAAA,CAAjBM,iBAAiB,CAAEC,cAAc,CAAAP,IAAA,CAAdO,cAAc,CAE/G,GAAM,CAAAC,WAAW,CAAGjB,UAAU,CAACG,WAAW,CAAC,CAE3C,mBACEI,KAAA,SAAMW,SAAS,CAAC,SAAS,CAAAC,QAAA,eAEvBZ,KAAA,YAASW,SAAS,CAAC,SAAS,CAAAC,QAAA,eAC1BZ,KAAA,QAAKW,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bd,IAAA,QACEa,SAAS,CAAC,iBAAiB,CAC3BE,GAAG,CAAEH,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEI,MAAO,CACzBC,GAAG,CAAC,sCAAQ,CACZC,OAAO,CAAEZ,YAAa,EAAE,cAC1BN,IAAA,QAAKa,SAAS,CAAC,eAAe,CAACE,GAAG,CAAEnB,OAAQ,CAACqB,GAAG,CAAC,2HAAuB,EAAE,GACtE,cACNf,KAAA,QAAKW,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BZ,KAAA,QAAKW,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7Bd,IAAA,OAAIa,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEF,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEO,IAAI,EAAM,cACtDnB,IAAA,WACEoB,IAAI,CAAC,QAAQ,CACb,aAAW,gFAAe,CAC1BP,SAAS,CAAC,sBAAsB,CAChCK,OAAO,CAAEX,aAAc,EAChB,GACL,cACNP,IAAA,MAAGa,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAEF,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAES,KAAK,EAAK,GACvD,cACNrB,IAAA,WACEoB,IAAI,CAAC,QAAQ,CACb,aAAW,2HAAuB,CAClCP,SAAS,CAAC,qBAAqB,CAC/BK,OAAO,CAAEV,UAAW,EACb,GACD,cAEVR,IAAA,YAASa,SAAS,CAAC,UAAU,CAAAC,QAAA,CAEzBT,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEiB,GAAG,CAAC,SAACC,IAAI,CAAK,CACnB,mBAAOvB,IAAA,CAACH,IAAI,EACF0B,IAAI,CAAEA,IAAK,CACXC,WAAW,CAAEf,eAAe,EAAG,CAC/BgB,aAAa,CAAEf,iBAAiB,EAAG,CACnCgB,UAAU,CAAEf,cAAc,EAAG,EAJrBY,IAAI,CAACI,GAAG,CAIe,CAC3C,CAAC,CAAC,EAEI,GAEL,CAEX,CAEA,cAAe,CAAAxB,IAAI,CAGnB;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}