{"ast":null,"code":"var _jsxFileName = \"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/InfoTooltip.js\";\nimport React from \"react\";\nimport successImage from \"../images/Success.svg\";\nimport failImage from \"../images/Fail.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoTooltip(_ref) {\n  let {\n    isOpen,\n    onClose,\n    isSuccess\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_edit-avatar ${isOpen && \"popup_is-opened\"}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info__container\",\n      onClick: e => {\n        e.stopPropagation();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n        className: \"popup__close\",\n        onClick: onClose,\n        ß: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__content\",\n        children: [isSuccess ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"info__image\",\n          src: successImage,\n          alt: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"info__image\",\n          src: failImage,\n          alt: \"Fail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"info__text\",\n          children: isSuccess ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["React","successImage","failImage","jsxDEV","_jsxDEV","InfoTooltip","_ref","isOpen","onClose","isSuccess","className","onClick","children","e","stopPropagation","type","ß","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["import React from \"react\";\nimport successImage from \"../images/Success.svg\";\nimport failImage from \"../images/Fail.svg\";\n\nfunction InfoTooltip({ isOpen, onClose, isSuccess }) {\n  return (\n    <div\n      className={`popup popup_edit-avatar ${isOpen && \"popup_is-opened\"}`}\n      onClick={onClose}\n    >\n      <div\n        className=\"info__container\"\n        onClick={(e) => {\n          e.stopPropagation();\n        }}\n      >\n        <button\n          type=\"button\"\n          aria-label=\"Закрыть\"\n          className=\"popup__close\"\n          onClick={onClose}ß\n        />\n        <div className=\"popup__content\">\n          {isSuccess ? (\n            <img className=\"info__image\" src={successImage} alt=\"Success\" />\n          ) : (\n            <img className=\"info__image\" src={failImage} alt=\"Fail\" />\n          )}\n          <h2 className=\"info__text\">\n            {isSuccess\n              ? \"Вы успешно зарегистрировались!\"\n              : \"Что-то пошло не так! Попробуйте ещё раз.\"}\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,WAAWA,CAAAC,IAAA,EAAiC;EAAA,IAAhC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACjD,oBACEF,OAAA;IACEM,SAAS,EAAG,2BAA0BH,MAAM,IAAI,iBAAkB,EAAE;IACpEI,OAAO,EAAEH,OAAQ;IAAAI,QAAA,eAEjBR,OAAA;MACEM,SAAS,EAAC,iBAAiB;MAC3BC,OAAO,EAAGE,CAAC,IAAK;QACdA,CAAC,CAACC,eAAe,EAAE;MACrB,CAAE;MAAAF,QAAA,gBAEFR,OAAA;QACEW,IAAI,EAAC,QAAQ;QACb,cAAW,4CAAS;QACpBL,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAEH,OAAQ;QAAAQ,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACFhB,OAAA;QAAKM,SAAS,EAAC,gBAAgB;QAAAE,QAAA,GAC5BH,SAAS,gBACRL,OAAA;UAAKM,SAAS,EAAC,aAAa;UAACW,GAAG,EAAEpB,YAAa;UAACqB,GAAG,EAAC;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,gBAEhEhB,OAAA;UAAKM,SAAS,EAAC,aAAa;UAACW,GAAG,EAAEnB,SAAU;UAACoB,GAAG,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxD,eACDhB,OAAA;UAAIM,SAAS,EAAC,YAAY;UAAAE,QAAA,EACvBH,SAAS,GACN,gCAAgC,GAChC;QAA0C;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACG,EAAA,GAjCQlB,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}