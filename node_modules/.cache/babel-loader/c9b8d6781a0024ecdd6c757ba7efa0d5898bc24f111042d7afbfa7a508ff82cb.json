{"ast":null,"code":"var _jsxFileName = \"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/DeleteCardPopup.js\";\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeleteCardPopup(_ref) {\n  let {\n    isOpen,\n    onClose,\n    onUpdateAvatar\n  } = _ref;\n  // const avatarRef = React.createRef('');\n\n  // function handleSubmit(e) {\n  //   e.preventDefault();\n\n  //   onUpdateAvatar({\n  //       avatar: avatarRef.current.value/* Значение инпута, полученное с помощью рефа */\n  //   });\n  //   avatarRef.current.value = '';\n  // } \n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    classs: \"delete-card\",\n    name: \"delete-confirmation\",\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    submitText: \"\\u0414\\u0430\",\n    isOpen: isOpen,\n    onClose: closeAllPopups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this)\n  //   <PopupWithForm classs='edit-avatar' name='avatar-content' title='Обновить аватар' \n  //       onClose={onClose}\n  //       isOpen={isOpen}\n  //       onSubmit={handleSubmit}>\n  //         <input \n  //           type=\"url\" \n  //           id=\"avatar-field\" \n  //           ref={avatarRef}\n  //           className=\"popup__field popup__field_input_avatar\" \n  //           required \n  //           placeholder=\"Ссылка на аватар\" \n  //           name=\"link\" \n  //           defaultValue=\"\"/>\n  //         <span className=\"avatar-field-error popup__field-error\"></span>\n  //   </PopupWithForm>\n  ;\n}\n_c = DeleteCardPopup;\nexport default DeleteCardPopup;\nvar _c;\n$RefreshReg$(_c, \"DeleteCardPopup\");","map":{"version":3,"names":["React","PopupWithForm","jsxDEV","_jsxDEV","DeleteCardPopup","_ref","isOpen","onClose","onUpdateAvatar","classs","name","title","submitText","closeAllPopups","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/DeleteCardPopup.js"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction DeleteCardPopup({isOpen, onClose, onUpdateAvatar}) {\n\n    // const avatarRef = React.createRef('');\n  \n    // function handleSubmit(e) {\n    //   e.preventDefault();\n        \n    //   onUpdateAvatar({\n    //       avatar: avatarRef.current.value/* Значение инпута, полученное с помощью рефа */\n    //   });\n    //   avatarRef.current.value = '';\n    // } \n  \n    return (\n        <PopupWithForm \n          classs='delete-card' \n          name='delete-confirmation' \n          title='Вы уверены?' \n          submitText='Да' \n          isOpen={isOpen}\n          onClose={closeAllPopups}>\n        </PopupWithForm>\n    //   <PopupWithForm classs='edit-avatar' name='avatar-content' title='Обновить аватар' \n    //       onClose={onClose}\n    //       isOpen={isOpen}\n    //       onSubmit={handleSubmit}>\n    //         <input \n    //           type=\"url\" \n    //           id=\"avatar-field\" \n    //           ref={avatarRef}\n    //           className=\"popup__field popup__field_input_avatar\" \n    //           required \n    //           placeholder=\"Ссылка на аватар\" \n    //           name=\"link\" \n    //           defaultValue=\"\"/>\n    //         <span className=\"avatar-field-error popup__field-error\"></span>\n    //   </PopupWithForm>\n    );\n  }\n    \n  export default DeleteCardPopup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,eAAeA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAc,CAAC,GAAAH,IAAA;EAEtD;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIF,OAAA,CAACF,aAAa;IACZQ,MAAM,EAAC,aAAa;IACpBC,IAAI,EAAC,qBAAqB;IAC1BC,KAAK,EAAC,0DAAa;IACnBC,UAAU,EAAC,cAAI;IACfN,MAAM,EAAEA,MAAO;IACfC,OAAO,EAAEM;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEF;AAACC,EAAA,GAtCMd,eAAe;AAwCtB,eAAeA,eAAe;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}