{"ast":null,"code":"var _jsxFileName = \"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../index.css';\nimport { UserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    card,\n    onCardClick,\n    OnDeleteClick\n  } = _ref;\n  const currentUser = React.useContext(UserContext);\n  const isOwn = card.owner._id === currentUser._id; //наша карточка или нет\n  const isLiked = card.likes.some(i => i._id === currentUser._id); //поставлен ли лайк\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${isLiked && 'element__like_liked'}`;\n  function handleClick() {\n    onCardClick(card);\n  }\n  function handleCardLike(card) {\n    if (isLiked) {} else {}\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element\",\n    children: [isOwn && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      \"aria-label\": \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n      className: \"element__trash\",\n      onClick: OnDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"element__image\",\n      src: card.link,\n      alt: card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"element__text\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__likes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"aria-label\": \"\\u041D\\u0440\\u0430\\u0432\\u0438\\u0442\\u0441\\u044F\",\n          className: cardLikeButtonClassName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__count\",\n          children: card.likes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","UserContext","api","jsxDEV","_jsxDEV","Card","_ref","_s","card","onCardClick","OnDeleteClick","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleCardLike","changeLikeCardStatus","then","newCard","setCards","state","map","c","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","link","alt","name","length","_c","$RefreshReg$"],"sources":["/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Card.js"],"sourcesContent":["import React from 'react';\nimport '../index.css';\nimport {UserContext} from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\n\nfunction Card({card, onCardClick, OnDeleteClick}) {\n\n  const currentUser = React.useContext(UserContext);\n\n  const isOwn = card.owner._id === currentUser._id; //наша карточка или нет\n  const isLiked = card.likes.some(i => i._id === currentUser._id); //поставлен ли лайк\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (`element__like ${isLiked && 'element__like_liked'}`);\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleCardLike(card) {\n    if (isLiked) {\n\n    } else {\n\n    }\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  } \n\n  return (\n    <div className=\"element\">\n        {isOwn && <button type=\"button\" aria-label=\"Удалить\" className=\"element__trash\" onClick={OnDeleteClick} />} \n        <img className=\"element__image\" src={card.link} alt={card.name} onClick={handleClick}/>\n        <div className=\"element__group\">\n            <h2 className=\"element__text\">{card.name}</h2>\n            <div className=\"element__likes\">\n                <button type=\"button\" aria-label=\"Нравится\" className={cardLikeButtonClassName}></button>\n                <div className=\"element__count\">{card.likes.length}</div>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Card;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}