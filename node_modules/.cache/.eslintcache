[{"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/index.js":"1","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/reportWebVitals.js":"2","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/App.js":"3","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Header.js":"4","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Main.js":"5","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Footer.js":"6","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/PopupWithForm.js":"7","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/ImagePopup.js":"8","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Card.js":"9","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/utils/api.js":"10","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/contexts/CurrentUserContext.js":"11","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditProfilePopup.js":"12","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditAvatarPopup.js":"13","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/AddPlacePopup.js":"14","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/DeleteCardPopup.js":"15","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/index.js":"16","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/reportWebVitals.js":"17","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/App.js":"18","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Header.js":"19","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/EditAvatarPopup.js":"20","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/EditProfilePopup.js":"21","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Main.js":"22","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/AddPlacePopup.js":"23","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/ImagePopup.js":"24","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Footer.js":"25","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/DeleteCardPopup.js":"26","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/contexts/CurrentUserContext.js":"27","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/utils/api.js":"28","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Card.js":"29","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/PopupWithForm.js":"30","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Register.js":"31","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Login.js":"32","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/InfoTooltip.js":"33","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/ProtectedRoute.js":"34","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/auth.js":"35","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/PageNotFound.js":"36"},{"size":546,"mtime":1678799906288,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1677169543829,"results":"39","hashOfConfig":"38"},{"size":5396,"mtime":1678973053991,"results":"40","hashOfConfig":"38"},{"size":263,"mtime":1678799304391,"results":"41","hashOfConfig":"38"},{"size":1933,"mtime":1678913007019,"results":"42","hashOfConfig":"38"},{"size":247,"mtime":1678799297209,"results":"43","hashOfConfig":"38"},{"size":1176,"mtime":1678799436518,"results":"44","hashOfConfig":"38"},{"size":692,"mtime":1678799333503,"results":"45","hashOfConfig":"38"},{"size":1556,"mtime":1678799228686,"results":"46","hashOfConfig":"38"},{"size":2227,"mtime":1678799869443,"results":"47","hashOfConfig":"38"},{"size":77,"mtime":1678452275282,"results":"48","hashOfConfig":"38"},{"size":1965,"mtime":1678883741326,"results":"49","hashOfConfig":"38"},{"size":1113,"mtime":1678884439783,"results":"50","hashOfConfig":"38"},{"size":1838,"mtime":1678884376711,"results":"51","hashOfConfig":"38"},{"size":550,"mtime":1678799236772,"results":"52","hashOfConfig":"38"},{"size":631,"mtime":1680091512313,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1677169543829,"results":"55","hashOfConfig":"54"},{"size":8495,"mtime":1680121534370,"results":"56","hashOfConfig":"54"},{"size":1044,"mtime":1680092391396,"results":"57","hashOfConfig":"54"},{"size":1113,"mtime":1678884439783,"results":"58","hashOfConfig":"54"},{"size":1965,"mtime":1678883741326,"results":"59","hashOfConfig":"54"},{"size":1933,"mtime":1678913007019,"results":"60","hashOfConfig":"54"},{"size":1838,"mtime":1678884376711,"results":"61","hashOfConfig":"54"},{"size":692,"mtime":1678799333503,"results":"62","hashOfConfig":"54"},{"size":247,"mtime":1678799297209,"results":"63","hashOfConfig":"54"},{"size":550,"mtime":1678799236772,"results":"64","hashOfConfig":"54"},{"size":77,"mtime":1678452275282,"results":"65","hashOfConfig":"54"},{"size":2227,"mtime":1678799869443,"results":"66","hashOfConfig":"54"},{"size":1556,"mtime":1678799228686,"results":"67","hashOfConfig":"54"},{"size":1176,"mtime":1678799436518,"results":"68","hashOfConfig":"54"},{"size":2674,"mtime":1680121453459,"results":"69","hashOfConfig":"54"},{"size":2324,"mtime":1680121486812,"results":"70","hashOfConfig":"54"},{"size":1217,"mtime":1680120965628,"results":"71","hashOfConfig":"54"},{"size":275,"mtime":1680078214498,"results":"72","hashOfConfig":"54"},{"size":1057,"mtime":1680121542319,"results":"73","hashOfConfig":"54"},{"size":620,"mtime":1680078212653,"results":"74","hashOfConfig":"54"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2733ci",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"198l1ep",{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/index.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/reportWebVitals.js",[],[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/App.js",["187"],[],"import { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport Footer from \"./Footer\";\n\nimport api from \"../utils/api\";\nimport { UserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [selectedForDeleteCard, setSelectedForDeleteCard] = useState({});\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isOpen = isEditAvatarPopupOpen || isEditProfilePopupOpen || isAddPlacePopupOpen || isDeleteCardPopupOpen || selectedCard.link\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([data, cards]) => {\n        setCurrentUser(data);\n        setCards(cards);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard({});\n    setSelectedForDeleteCard({});\n  }\n\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if(evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    if(isOpen) { // навешиваем только при открытии\n      document.addEventListener('keydown', closeByEscape);\n      return () => {\n        document.removeEventListener('keydown', closeByEscape);\n      }\n    }\n  }, [isOpen]) \n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id); //поставлен ли лайк\n    if (isLiked) {\n      api\n        .unlikeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => console.log(err));\n    } else {\n      api\n        .likeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function handleDeleteCard(card) {\n    setIsLoading(true);\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id != card._id));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function changeUserInfo(data) {\n    setIsLoading(true);\n    api\n      .changeUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api\n      .editAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleAddCard(card) {\n    setIsLoading(true);\n    api\n      .addNewCard(card)\n      .then((data) => {\n        console.log(data);\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleDeletePopupOpen(card) {\n    setSelectedForDeleteCard(card);\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  return (\n    <UserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          cards={cards}\n          onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\n          onEditProfile={() => setIsEditProfilePopupOpen(true)}\n          onAddPlace={() => setIsAddPlacePopupOpen(true)}\n          handleCardClick={() => setSelectedCard}\n          handleDeleteClick={() => handleDeletePopupOpen}\n          handleCardLike={() => handleCardLike}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={changeUserInfo}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCard}\n          isLoading={isLoading}\n        />\n        <DeleteCardPopup\n          card={selectedForDeleteCard}\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          onDeleteSubmit={handleDeleteCard}\n          isLoading={isLoading}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <Footer />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Header.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Main.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Footer.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/PopupWithForm.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/ImagePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/Card.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/utils/api.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/contexts/CurrentUserContext.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditProfilePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/EditAvatarPopup.js",["188"],[],"import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar, isLoading }) {\n  const avatarRef = React.createRef(\"\");\n\n  React.useEffect(() => {\n    avatarRef.current.value = \"\";\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      classs=\"edit-avatar\"\n      name=\"avatar-content\"\n      title=\"Обновить аватар\"\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n      isLoading={isLoading}\n    >\n      <input\n        type=\"url\"\n        id=\"avatar-field\"\n        ref={avatarRef}\n        className=\"popup__field popup__field_input_avatar\"\n        required\n        placeholder=\"Ссылка на аватар\"\n        name=\"link\"\n        defaultValue=\"\"\n      />\n      <span className=\"avatar-field-error popup__field-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/AddPlacePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/mesto-react/src/components/DeleteCardPopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/index.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/App.js",["189","190"],[],"import { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport Footer from \"./Footer\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport PageNotFound from \"./PageNotFound\";\n\nimport api from \"../utils/api\";\nimport { UserContext } from \"../contexts/CurrentUserContext\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from \"../auth.js\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isSuccessPopupOpen, setIsSuccessPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [selectedForDeleteCard, setSelectedForDeleteCard] = useState({});\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const isOpen =\n    isEditAvatarPopupOpen ||\n    isEditProfilePopupOpen ||\n    isAddPlacePopupOpen ||\n    isDeleteCardPopupOpen ||\n    selectedCard.link;\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([data, cards]) => {\n        setCurrentUser(data);\n        setCards(cards);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsSuccessPopupOpen(false);\n    setSelectedCard({});\n    setSelectedForDeleteCard({});\n    setErrorMessage(\"\");\n  }\n\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n    if (isOpen) {\n      // навешиваем только при открытии\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => {\n        document.removeEventListener(\"keydown\", closeByEscape);\n      };\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  const handleTokenCheck = () => {\n    //Проверка наличия токена в localStorage\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          console.log(res);\n          if (res) {\n            setLoggedIn(true);\n            setUserEmail(res.data.email);\n            navigate(\"/\", { replace: true });\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  function handleLogin() {\n    setLoggedIn(true);\n    auth\n      .checkToken(localStorage.getItem(\"jwt\"))\n      .then((res) => {\n        if (res) {\n          setUserEmail(res.data.email);\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleEmailReset() {\n    setUserEmail(\"\");\n  }\n\n  function handleNotification(successed) {\n    setIsSuccessPopupOpen(true);\n    setIsSuccess(successed);\n  }\n\n  function handleErrorMessageNotification(err) {\n    setErrorMessage(err);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id); //поставлен ли лайк\n    if (isLiked) {\n      api\n        .unlikeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => console.log(err));\n    } else {\n      api\n        .likeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function handleDeleteCard(card) {\n    setIsLoading(true);\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id != card._id));\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function changeUserInfo(data) {\n    setIsLoading(true);\n    api\n      .changeUserInfo(data)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleUpdateAvatar(avatar) {\n    setIsLoading(true);\n    api\n      .editAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleAddCard(card) {\n    setIsLoading(true);\n    api\n      .addNewCard(card)\n      .then((data) => {\n        console.log(data);\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleDeletePopupOpen(card) {\n    setSelectedForDeleteCard(card);\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  return (\n    <UserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header email={userEmail} handleEmailReset={handleEmailReset} />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              loggedIn ? (\n                <Navigate to=\"/mesto-react\" replace />\n              ) : (\n                <Navigate to=\"/signin\" replace />\n              )\n            }\n          />\n          <Route\n            path=\"/mesto-react\"\n            element={\n              <ProtectedRoute\n                element={Main}\n                cards={cards}\n                onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\n                onEditProfile={() => setIsEditProfilePopupOpen(true)}\n                onAddPlace={() => setIsAddPlacePopupOpen(true)}\n                handleCardClick={() => setSelectedCard}\n                handleDeleteClick={() => handleDeletePopupOpen}\n                handleCardLike={() => handleCardLike}\n                loggedIn={loggedIn}\n              />\n            }\n          />\n          <Route\n            path=\"/signup\"\n            element={\n              <Register\n                handleNotification={handleNotification}\n                handleErrorMessageNotification={handleErrorMessageNotification}\n              />\n            }\n          />\n          <Route\n            path=\"/signin\"\n            element={\n              <Login\n                handleLogin={handleLogin}\n                handleNotification={handleNotification}\n              />\n            }\n          />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          isLoading={isLoading}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={changeUserInfo}\n          isLoading={isLoading}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddCard={handleAddCard}\n          isLoading={isLoading}\n        />\n        <DeleteCardPopup\n          card={selectedForDeleteCard}\n          isOpen={isDeleteCardPopupOpen}\n          onClose={closeAllPopups}\n          onDeleteSubmit={handleDeleteCard}\n          isLoading={isLoading}\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <InfoTooltip\n          isOpen={isSuccessPopupOpen}\n          onClose={closeAllPopups}\n          isSuccess={isSuccess}\n          errorMessage={errorMessage}\n        />\n        <Footer />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Header.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/EditAvatarPopup.js",["191"],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/EditProfilePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Main.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Footer.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/DeleteCardPopup.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/utils/api.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Card.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/PopupWithForm.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Register.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/Login.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/InfoTooltip.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/auth.js",[],[],"/Users/nastya/Desktop/Yandex_Practicum/react-mesto-auth/src/components/PageNotFound.js",[],[],{"ruleId":"192","severity":1,"message":"193","line":88,"column":55,"nodeType":"194","messageId":"195","endLine":88,"endColumn":57},{"ruleId":"196","severity":1,"message":"197","line":9,"column":6,"nodeType":"198","endLine":9,"endColumn":14,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":85,"column":6,"nodeType":"198","endLine":85,"endColumn":8,"suggestions":"201"},{"ruleId":"192","severity":1,"message":"193","line":158,"column":55,"nodeType":"194","messageId":"195","endLine":158,"endColumn":57},{"ruleId":"196","severity":1,"message":"197","line":9,"column":6,"nodeType":"198","endLine":9,"endColumn":14,"suggestions":"202"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'avatarRef'. Either include it or remove the dependency array.","ArrayExpression",["203"],"React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.",["204"],["205"],{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"206","fix":"210"},"Update the dependencies array to be: [avatarRef, isOpen]",{"range":"211","text":"212"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"213","text":"214"},{"range":"215","text":"212"},[255,263],"[avatarRef, isOpen]",[2817,2819],"[handleTokenCheck]",[255,263]]